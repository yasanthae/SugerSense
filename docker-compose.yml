version: '3.9'

services:
  traefik:
    image: traefik:v2.10
    container_name: traefik
    command:
      - "--entrypoints.web.address=:80"         # Define HTTP entrypoint
      - "--providers.docker=true"              # Enable Docker provider
      - "--api.insecure=true"                  # Optional: Enable Traefik dashboard
    ports:
      - "80:80"                                # Expose Traefik to handle HTTP traffic
      - "8080:8080"                            # Optional: Traefik dashboard
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"  # Access to Docker socket
    networks:
      - traefik-network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    volumes:
      - ./backend:/app
    depends_on:
      - frontend
      - login
    networks:
      - traefik-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.backend.rule=Host(`sugersense.com`) && PathPrefix(`/api`)"
      - "traefik.http.middlewares.backend-strip.stripprefix.prefixes=/api"
      - "traefik.http.routers.backend.middlewares=backend-strip"
      - "traefik.http.services.backend.loadbalancer.server.port=5000"

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    volumes:
      - ./frontend/public:/usr/share/nginx/html
    networks:
      - traefik-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=Host(`sugersense.com`)"
      - "traefik.http.services.frontend.loadbalancer.server.port=80"
      - "traefik.http.middlewares.strip-static.stripprefixregex.regex=/static/"
      - "traefik.http.routers.frontend.middlewares=strip-static"

  login:
    build:
      context: ./login
      dockerfile: Dockerfile
    volumes:
      - ./login:/usr/share/nginx/html
    networks:
      - traefik-network
    labels:
      - "traefik.enable=true"
      # Route only when Host is sugersense.com and the path starts with /login
      - "traefik.http.routers.login.rule=Host(`sugersense.com`) && PathPrefix(`/login`)"
      # Middleware to strip the /login prefix before routing
      - "traefik.http.middlewares.login-strip.stripprefix.prefixes=/login"
      - "traefik.http.routers.login.middlewares=login-strip"
      # Middleware to block access not coming through the frontend
      - "traefik.http.middlewares.login-access.headers.customrequestheaders.Referer=https://sugersense.com/"
      - "traefik.http.routers.login.middlewares=login-strip,login-access"
      - "traefik.http.services.login.loadbalancer.server.port=80"

  worker:
    build:
      context: ./worker
      dockerfile: Dockerfile
    volumes:
      - ./worker/public:/usr/share/nginx/html
    networks:
      - traefik-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.worker.rule=Host(`sugersense.com`) && PathPrefix(`/worker`)"
      - "traefik.http.middlewares.worker-strip.stripprefix.prefixes=/worker"
      - "traefik.http.routers.worker.middlewares=worker-strip"
      - "traefik.http.services.worker.loadbalancer.server.port=80"

  db:
    image: mysql:8.0
    container_name: mysql_container
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root_password
      MYSQL_DATABASE: SUGERSENSE
      MYSQL_USER: sugersense
      MYSQL_PASSWORD: Kingswood@123
    volumes:
      - db_data:/var/lib/mysql
    networks:
      - traefik-network
    ports:
      - "3306:3306"  # Map container's port 3306 to host's port 3306

volumes:
  db_data:

networks:
  traefik-network:
    driver: bridge
